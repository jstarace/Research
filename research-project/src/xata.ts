// Generated by Xata Codegen 0.28.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "project_name",
    columns: [
      { name: "name", type: "string", unique: true },
      {
        name: "description",
        type: "string",
        notNull: true,
        defaultValue: "Fill in",
      },
      { name: "project_id", type: "int", unique: true },
      {
        name: "status",
        type: "string",
        notNull: true,
        defaultValue: "Not Started",
      },
      {
        name: "start_date",
        type: "datetime",
        notNull: true,
        defaultValue: "2020-06-01T08:00:00.000Z",
      },
      { name: "end_date", type: "datetime" },
    ],
  },
  { name: "project_members", columns: [] },
  {
    name: "search_string",
    columns: [
      { name: "search_term", type: "string", notNull: true, defaultValue: "1" },
      { name: "string_id", type: "int", unique: true },
    ],
    revLinks: [{ column: "string_id", table: "method_2_results" }],
  },
  {
    name: "method_2_results",
    columns: [
      {
        name: "string_id",
        type: "link",
        link: { table: "search_string" },
        unique: true,
      },
      { name: "paper_title", type: "string" },
      { name: "authors", type: "string" },
      { name: "DOI", type: "string" },
      { name: "publication_date", type: "datetime" },
    ],
  },
  {
    name: "project_collaborators",
    columns: [
      { name: "user_id", type: "string", unique: true },
      {
        name: "first_name",
        type: "string",
        notNull: true,
        defaultValue: "johnny",
      },
      {
        name: "last_name",
        type: "string",
        notNull: true,
        defaultValue: "appleseed",
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type ProjectName = InferredTypes["project_name"];
export type ProjectNameRecord = ProjectName & XataRecord;

export type ProjectMembers = InferredTypes["project_members"];
export type ProjectMembersRecord = ProjectMembers & XataRecord;

export type SearchString = InferredTypes["search_string"];
export type SearchStringRecord = SearchString & XataRecord;

export type Method2Results = InferredTypes["method_2_results"];
export type Method2ResultsRecord = Method2Results & XataRecord;

export type ProjectCollaborators = InferredTypes["project_collaborators"];
export type ProjectCollaboratorsRecord = ProjectCollaborators & XataRecord;

export type DatabaseSchema = {
  project_name: ProjectNameRecord;
  project_members: ProjectMembersRecord;
  search_string: SearchStringRecord;
  method_2_results: Method2ResultsRecord;
  project_collaborators: ProjectCollaboratorsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://jstarace-s-workspace-ko759t.us-east-1.xata.sh/db/research-papers-db",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
